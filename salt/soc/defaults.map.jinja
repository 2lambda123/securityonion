{% import_yaml 'soc/defaults.yaml' as SOCDEFAULTS %}
{% from 'vars/globals.map.jinja' import GLOBALS %}

{% for module, application_url in GLOBALS.application_urls.items() %}
{%   do SOCDEFAULTS.soc.server.modules[module].update({'hostUrl': application_url}) %}
{% endfor %}

{# add nodes from the logstash:nodes pillar to soc.server.modules.elastic.remoteHostUrls #}
{% for node_type, minions in salt['pillar.get']('logstash:nodes', {}).items() %}
{%   for m in minions.keys() %}
{%     do SOCDEFAULTS.soc.server.modules.elastic.remoteHostUrls.append(m) %}
{%   endfor %}
{% endfor %}

{% do SOCDEFAULTS.soc.server.modules.elastic.update({'username': GLOBALS.elasticsearch.auth.users.so_elastic_user.user, 'password': GLOBALS.elasticsearch.auth.users.so_elastic_user.pass}) %}

{% if GLOBALS.role != 'so-import' %}
{%   do SOCDEFAULTS.soc.server.modules.influxdb.update({'hostUrl': 'https://' ~ GLOBALS.manager_ip ~ ':8086'}) %}
{% endif %}

{% do SOCDEFAULTS.soc.server.modules.statickeyauth.update({'anonymousCidr': GLOBALS.docker_range, 'apiKey': pillar.sensoroni.sensoronikey}) %}

{% do SOCDEFAULTS.soc.client.case.update({'analyzerNodeId': GLOBALS.minion_id}) %}

{% set SOCDEFAULTS = SOCDEFAULTS.soc %}
